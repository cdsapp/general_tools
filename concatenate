#!/bin/tcsh

# first, ensure that you have CorpusSearch installed and 
# that these two aliases match the filepaths where CS and your files are saved
CS="java -classpath /Applications/CS_2.003.04.jar csearch/CorpusSearch"
Q="/Users/evansell/Documents/DiGS_Lightning/innovative"

# preprocessing: renames the relevant NPs in all .psd files, saving the result as .trans fils
for file in $Q/*.psd

do 
	BASE=`basename $file .psd`
	echo "renaming NP with ADJ as A-NP in file called $BASE"
 	$CS $Q/renameNP.q $BASE.psd >& ERR
  	mv -f $BASE.psd.out $BASE.trans

done

# executes a coding query on all .trans files
$CS adj.c *.trans

# replaces the delimiter ':' with a new delimiter '~'
sed -i '' 's/:/~/g' adj.cod

# concatenates the leaves (i.e. the words themselves) onto the coding string
for file in $Q/*.cod

do 
	BASE=`basename $file .cod`
	echo "removing ADJP and concatenating NP daughters in file called $BASE"

	echo "running e1phrase.q to remove phrasal wrappers"
 	$CS $Q/e1phrase.q $BASE.cod >& ERR
  	mv -f $BASE.cod.out $BASE.cod

	echo "running e2conc.q to concatenate NP daughters"
 	$CS $Q/e2conc.q $BASE.cod >& ERR
  	mv -f $BASE.cod.out $BASE.cod

done

# post-processing: converts ':' between the last factor and the string of leaves to '~' and 
# converts any other delimiters (i.e. between leaves) to '%'
sed -i '' 's/~sg:/~sg~/g' adj.cod
sed -i '' 's/~pl:/~pl~/g' adj.cod
sed -i '' 's/:/%/g' adj.cod
sed -i '' 's/@/%/g' adj.cod

# prints the coding strings, including leaves
$CS print.q adj.cod

# renames the output as a .txt (for easy importing into Excel or R)
cp adj.cod.ooo adjdata.txt

# removes irrelevant coding strings (non-hits)
sed -i '' '/^irrel/d' adjdata.txt

# ensures that '~' is the delimiter between factors, but words/leaves are only separated by a space
sed -i '' 's/@/~/g' adjdata.txt
sed -i '' 's/%%%/+/g' adjdata.txt
sed -i '' 's/%/ /g' adjdata.txt
